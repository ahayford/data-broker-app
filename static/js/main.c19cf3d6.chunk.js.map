{"version":3,"sources":["App.js","components/ModalComponent.js","reportWebVitals.js","index.js"],"names":["ModalComponent","children","isShowing","onToggle","className","onClick","dataBrokers","data","i","length","complete","console","table","App","props","buttonChange","brokerName","state","index","findIndex","broker","name","setState","instructionButtonClick","currIndex","dataBroker","showModal","filterResults","event","queryString","target","value","log","getModalContent","instruction","type","getOptOutContent","optout","search","href","rel","onChange","this","placeholder","id","filter","toLowerCase","includes","map","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAYA,I,qGCOeA,EAjBQ,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC7C,OAAKD,EAKD,qBAAKE,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACA,sBAAMA,UAAU,QAAQC,QAASF,EAAjC,kBAGGF,OATA,8BDKPK,EAAcC,EAGTC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IACV,UAA5BF,EAAYE,GAAGE,SAAuBJ,EAAYE,GAAGE,UAAW,EAAQJ,EAAYE,GAAGE,UAAW,EAIpGC,QAAQC,MAAML,G,IAgLCM,E,kDA5Kb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,aAAe,SAACC,GACd,IAAMV,EAAW,YAAO,EAAKW,MAAMX,aAC7BY,EAAQZ,EAAYa,WAAU,SAAAC,GAAM,OAAIA,EAAOC,OAASL,KAC9DV,EAAYY,GAAOR,UAAYJ,EAAYY,GAAOR,SAClD,EAAKY,SAAS,CAAChB,iBAfE,EAkBnBiB,uBAAyB,SAACP,GACxB,IAAMQ,EAAY,EAAKP,MAAMX,YAAYa,WAAU,SAAAM,GAAU,OAAIA,EAAWJ,OAASL,KACrF,EAAKM,SAAS,CAACI,WAAW,EAAMF,eApBf,EAuBnBG,cAAgB,SAACC,GACf,EAAKN,SAAS,CACZO,YAAaD,EAAME,OAAOC,QAE5BpB,QAAQqB,IAAI,oBAAqBJ,IA3BhB,EA+BnBK,gBAAkB,WAChB,IAAMR,EAAa,EAAKR,MAAMX,YAAY,EAAKW,MAAMO,WAErD,GAAKC,EAIL,OAAO,qCAEL,qBAAKrB,UAAW,kBAAhB,SACE,6BAAKqB,EAAWJ,SAGlB,qBAAKjB,UAAW,wBAAhB,SACE,4BAAIqB,EAAWS,gBAGjB,wBAAQ7B,QAAS,kBAAM,EAAKiB,SAAS,CACnCI,WAAY,EAAKT,MAAMS,aACrBS,KAAK,SAFT,SAGG,eAnDY,EAyDnBC,iBAAmB,SAAChB,GAClB,OAAgD,IAA5CA,EAAOiB,OAAOC,OAAO,kBAChB,mBAAGC,KAAMnB,EAAOiB,OAAQP,OAAQ,SAAUU,IAAK,aAC5CpC,WAA+B,IAApBgB,EAAOV,SACd,gBAAkB,kBAFzB,SAIL,4BAAI,oBAEoF,IAAjFU,EAAOiB,OAAOC,OAAO,uDACvB,mBAAGC,KAAM,UAAYnB,EAAOiB,OACzBjC,WAA+B,IAApBgB,EAAOV,SACd,gBAAkB,kBAFzB,SAGL,wCAGK,uBArET,EAAKO,MAAQ,CACXX,YAAaA,EACbuB,YAAa,GACbL,UAAW,KACXE,WAAW,GAPI,E,0CA6EnB,WAAU,IAAD,OACP,OACI,sBAAKtB,UAAU,MAAf,UAEE,sBAAKA,UAAW,YAAhB,UACE,qBAAKA,UAAW,YAAhB,SACE,4DAGF,qBAAKA,UAAW,uBAAhB,SAEE,qBAAKA,UAAW,iBAAhB,SACE,uBAAO+B,KAAK,SAASM,SAAUC,KAAKf,cAAeI,MAAOW,KAAKzB,MAAMY,YAAac,YAAY,kBAMlG,qBAAKvC,UAAW,uBAAhB,SACE,qBAAKA,UAAW,iBAAhB,SAEI,uBAAOA,UAAW,eAAlB,SACE,qBAAIA,UAAW,kBAAf,UACE,oBAAIA,UAAW,kBAAf,qBACA,oBAAIA,UAAW,kBAAf,0BACA,oBAAIA,UAAW,kBAAf,kCACA,oBAAIA,UAAW,kBAAf,mCASZ,qBAAKA,UAAU,gBAAf,SAEE,qBAAKA,UAAW,gBAAhB,SACE,uBAAOwC,GAAI,eAAX,SACE,kCAIEF,KAAKzB,MAAMX,YACNuC,QAAO,SAAAzB,GAAM,OAAIA,EAAOC,KAAKyB,cAAcC,SAAS,EAAK9B,MAAMY,YAAYiB,kBAC3EE,KAAI,SAAC5B,GAAD,OACC,qBAAIhB,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,gBAA1D,UACE,oBAAIN,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,gBAA1D,SACGU,EAAOC,OAGV,oBAAIjB,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,gBAA1D,SACG,EAAK0B,iBAAiBhB,KAIzB,oBAAIhB,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,gBAA1D,SACE,wBAAQL,QAAS,kBAAM,EAAKkB,uBAAuBH,EAAOC,OAAOc,KAAK,SAC9D/B,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,SAD9D,SAEG,2BAKL,oBAAIN,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,gBAA1D,SACE,wBAAQL,QAAS,kBAAM,EAAKU,aAAaK,EAAOC,OAAOc,KAAK,SACpD/B,WAA+B,IAApBgB,EAAOV,SAAoB,cAAgB,SAD9D,SAEGU,EAAOV,SAAW,WAAa,uBAQlD,cAAC,EAAD,CACIR,UAAWwC,KAAKzB,MAAMS,UACtBvB,SAAU,kBACN,EAAKmB,SAAS,CACZI,WAAY,EAAKT,MAAMS,aAJjC,SAOGgB,KAAKT,oC,GAjKNgB,IAAMC,WEPTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c19cf3d6.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport data from './data-brokers.json'\nimport ModalComponent from './components/ModalComponent'\n\n\n\n\nlet dataBrokers = data;\n\n//preprocess the data\nfor (let i = 0; i < dataBrokers.length; i++) {\n  dataBrokers[i].complete === \"FALSE\" ? dataBrokers[i].complete = false : dataBrokers[i].complete = true;\n}\n\n\nconsole.table(data);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataBrokers: dataBrokers,\n      queryString: \"\",\n      currIndex: null,\n      showModal: false,\n    };\n  }\n\n  buttonChange = (brokerName) => {\n    const dataBrokers = [...this.state.dataBrokers]\n    const index = dataBrokers.findIndex(broker => broker.name === brokerName)\n    dataBrokers[index].complete = !dataBrokers[index].complete\n    this.setState({dataBrokers})\n  }\n\n  instructionButtonClick = (brokerName) => {\n    const currIndex = this.state.dataBrokers.findIndex(dataBroker => dataBroker.name === brokerName)\n    this.setState({showModal: true, currIndex})\n  }\n\n  filterResults = (event) => {\n    this.setState({\n      queryString: event.target.value\n    })\n    console.log(\"FILTERING RESULTS\", event)\n  }\n\n\n  getModalContent = () => {\n    const dataBroker = this.state.dataBrokers[this.state.currIndex]\n\n    if (!dataBroker) {\n      return;\n    }\n\n    return <>\n\n      <div className={\"modal-title-div\"}>\n        <h1>{dataBroker.name}</h1>\n      </div>\n\n      <div className={\"modal-instruction-div\"}>\n        <p>{dataBroker.instruction}</p>\n      </div>\n\n      <button onClick={() => this.setState({\n        showModal: !this.state.showModal\n      })} type='button'>\n        {\"Cancel\"}\n      </button>\n\n    </>\n  }\n\n  getOptOutContent = (broker) => {\n    if (broker.optout.search(/^http[s]?:\\/\\//) !== -1) {\n      return <a href={broker.optout} target={\"_blank\"} rel={\"noreferrer\"}\n                className={broker.complete === true ?\n                    \"link-complete\" : \"link-incomplete\"}\n      >\n        <b>{'Opt Out Form'}</b>\n      </a>\n    } else if (broker.optout.search(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi) !== -1) {\n      return <a href={`mailto:` + broker.optout}\n                className={broker.complete === true ?\n                    \"link-complete\" : \"link-incomplete\"}>\n        <b>Email</b>\n      </a>\n    } else {\n      return \"Follow Instructions\"\n    }\n  }\n\n\n  render() {\n    return (\n        <div className='App'>\n\n          <div className={'fixed-div'}>\n            <div className={'title-div'}>\n              <h1>Data Broker Opt Out List</h1>\n            </div>\n\n            <div className={'search-bar-outer-div'}>\n\n              <div className={'search-bar-div'}>\n                <input type=\"search\" onChange={this.filterResults} value={this.state.queryString} placeholder=\"Search...\"/>\n              </div>\n\n\n            </div>\n\n            <div className={'outer-header-wrapper'}>\n              <div className={'header-wrapper'}>\n                {\n                  <table className={\"header-Table\"}>\n                    <tr className={\"tr-header-table\"}>\n                      <th className={\"td-header-table\"}>Website</th>\n                      <th className={\"td-header-table\"}>Opt Out Link</th>\n                      <th className={\"td-header-table\"}>Removal Instructions</th>\n                      <th className={\"td-header-table\"}>Complete?</th>\n                    </tr>\n                  </table>\n                }\n              </div>\n            </div>\n\n          </div>\n\n          <div className='outer-wrapper'>\n\n            <div className={'table-wrapper'}>\n              <table id={\"optout-Table\"}>\n                <tbody>\n\n\n                {\n                  this.state.dataBrokers\n                      .filter(broker => broker.name.toLowerCase().includes(this.state.queryString.toLowerCase()))\n                      .map((broker) =>\n                            <tr className={broker.complete === true ? 'tr-complete' : 'tr-incomplete'}>\n                              <td className={broker.complete === true ? 'td-complete' : 'td-incomplete'}>\n                                {broker.name}\n                              </td>\n\n                              <td className={broker.complete === true ? 'td-complete' : 'td-incomplete'}>\n                                {this.getOptOutContent(broker)}\n                              </td>\n\n\n                              <td className={broker.complete === true ? 'td-complete' : 'td-incomplete'}>\n                                <button onClick={() => this.instructionButtonClick(broker.name)} type='button'\n                                        className={broker.complete === true ? 'button-grey' : 'button'}>\n                                  {\"Removal Instructions\"}\n                                </button>\n\n                              </td>\n\n                              <td className={broker.complete === true ? 'td-complete' : 'td-incomplete'}>\n                                <button onClick={() => this.buttonChange(broker.name)} type='button'\n                                        className={broker.complete === true ? 'button-grey' : 'button'}>\n                                  {broker.complete ? \"Complete\" : \"Incomplete\"}\n                                </button>\n                              </td>\n                            </tr>\n)\n\n                }\n\n                <ModalComponent\n                    isShowing={this.state.showModal}\n                    onToggle={() =>\n                        this.setState({\n                          showModal: !this.state.showModal\n                        })\n                    }>\n                  {this.getModalContent()}\n                </ModalComponent>\n              </tbody>\n              </table>\n\n\n            </div>\n          </div>\n        </div>\n    )\n  };\n}\n\nexport default App;\n\n\n\n\n\n","import React from \"react\";\n\nconst ModalComponent = ({ children, isShowing, onToggle }) => {\n  if (!isShowing) {\n    return <></>\n  }\n\n  return (\n      <div className='modal'>\n        <div className='modal-content'>\n        <span className='close' onClick={onToggle}>\n          &times;\n        </span>\n          {children}\n        </div>\n      </div>\n  )\n}\n\nexport default ModalComponent","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}